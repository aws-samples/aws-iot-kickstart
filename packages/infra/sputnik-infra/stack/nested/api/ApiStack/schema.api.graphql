# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

input ByIdInput {
	id: ID!
}

type Deployment
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	thingId: String!
	deploymentId: String!
	type: String!
	spec: AWSJSON
	greengrassGroup: AWSJSON
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}
type PaginatedDeployments
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	deployments: [Deployment]
	nextToken: String
}
type DeviceStat
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	total: Int!
	connected: Int!
	disconnected: Int!
}
type DeviceType
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	id: String!
	name: String!
	type: String!
	spec: AWSJSON
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}
type PaginatedDeviceTypes
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	deviceTypes: [DeviceType]
	nextToken: String
}
type DeviceBlueprint
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	id: String!
	name: String!
	type: String!
	compatibility: [String]
	deviceTypeMappings: AWSJSON
	spec: AWSJSON
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}
type PaginatedDeviceBlueprints
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	deviceBlueprints: [DeviceBlueprint]
	nextToken: String
}
type Setting
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	id: String!
	type: String!
	setting: AWSJSON
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}

type System
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	id: String!
	name: String!
	description: String
	thingIds: [String]
	deviceIds: [String]!
	systemBlueprintId: String!
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}
type PaginatedSystems
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	systems: [System]
	nextToken: String
}
type SystemStat
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	total: Int!
}

type SystemBlueprint
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	id: String!
	name: String!
	description: String
	prefix: String!
	spec: AWSJSON
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
}
type PaginatedSystemBlueprints
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	systemBlueprints: [SystemBlueprint]
	nextToken: String
}
type SystemBlueprintStat
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	total: Int!
}

type ThingShadowResponse
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	payload: String
}

type S3Keys
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	Key: String
}
type S3ListObjectsResponse
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	Contents: [S3Keys]
	KeyCount: Int
	NextContinuationToken: String
	IsTruncated: Boolean
}

type Data
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	ThingNameAndMetric: String
	Timestamp: String
	ExpirationTime: String
	Data: AWSJSON
}
type PaginatedData
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	Data: [Data]
}

extend type Query
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	# Data Store
	getData(
		thingName: String!
		metricName: String!
		timeAgoInSecs: Int!
	): PaginatedData

	## Deployments
	listDeployments(limit: Int, nextToken: String): PaginatedDeployments

	## Device Blueprints
	listDeviceBlueprints(
		limit: Int
		nextToken: String
	): PaginatedDeviceBlueprints
	getDeviceBlueprint(id: String!): DeviceBlueprint

	## Device Types
	listDeviceTypes(limit: Int, nextToken: String): PaginatedDeviceTypes
	getDeviceType(id: String!): DeviceType

	## Settings
	getSetting(id: String!): Setting

	## Systems
	listSystems(limit: Int, nextToken: String): PaginatedSystems
	getSystem(id: String!): System
	getSystemStats: SystemStat

	## System Blueprints
	listSystemBlueprints(
		limit: Int
		nextToken: String
	): PaginatedSystemBlueprints
	getSystemBlueprint(id: String!): SystemBlueprint

	## Other
	getJustInTimeOnBoardingState: Boolean
		@aws_iam
		@aws_cognito_user_pools(cognito_groups: ["Administrators"])

	describeEndpoint(endpointType: String): String
	getThingShadow(params: AWSJSON!): ThingShadowResponse

	s3ListObjectsV2(params: AWSJSON!): S3ListObjectsResponse
}

extend type Mutation
	@aws_iam
	@aws_cognito_user_pools(cognito_groups: ["Administrators"]) {
	## Deployments
	addDeployment(thingId: String!): Deployment!

	## Device Blueprints
	addDeviceBlueprint(
		name: String!
		type: String!
		compatibility: [String]!
		deviceTypeMappings: AWSJSON!
		spec: AWSJSON!
	): DeviceBlueprint!

	deleteDeviceBlueprint(id: String!): DeviceBlueprint

	updateDeviceBlueprint(
		id: String!
		name: String!
		type: String!
		compatibility: [String]!
		deviceTypeMappings: AWSJSON!
		spec: AWSJSON!
	): DeviceBlueprint

	## Device Types
	addDeviceType(name: String!, type: String!, spec: AWSJSON): DeviceType!

	deleteDeviceType(id: String!): DeviceType

	updateDeviceType(
		id: String!
		name: String!
		type: String!
		spec: AWSJSON
	): DeviceType

	## Settings
	updateSetting(id: String!, type: String!, setting: AWSJSON!): Setting

	## Systems
	addSystem(
		name: String!
		description: String
		deviceIds: [String]!
		systemBlueprintId: String!
	): System!

	deleteSystem(id: String!): System

	updateSystem(
		id: String!
		name: String!
		description: String
		deviceIds: [String]!
	): System

	refreshSystem(id: String!): Boolean

	## System Blueprints
	addSystemBlueprint(
		name: String!
		description: String
		prefix: String!
		spec: AWSJSON!
	): SystemBlueprint!

	deleteSystemBlueprint(id: String!): SystemBlueprint

	updateSystemBlueprint(
		id: String!
		name: String!
		description: String
		prefix: String!
		spec: AWSJSON!
	): SystemBlueprint

	## Other
	attachPrincipalPolicy(policyName: String!, principal: String!): Boolean
		@aws_iam
		@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"])

	setJustInTimeOnBoardingState(enabled: Boolean!): Boolean

	updateThingShadow(params: AWSJSON!): ThingShadowResponse
		@aws_iam
		@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"])
}

extend type Subscription
	@aws_cognito_user_pools(cognito_groups: ["Administrators", "Members"]) {
	## Device Blueprints
	addedDeviceBlueprint: DeviceBlueprint
		@aws_subscribe(mutations: ["addDeviceBlueprint"])

	updatedDeviceBlueprint: DeviceBlueprint
		@aws_subscribe(mutations: ["updateDeviceBlueprint"])
	deletedDeviceBlueprint: DeviceBlueprint
		@aws_subscribe(mutations: ["deleteDeviceBlueprint"])

	## Device Types
	addedDeviceType: DeviceType @aws_subscribe(mutations: ["addDeviceType"])

	updatedDeviceType: DeviceType
		@aws_subscribe(mutations: ["updateDeviceType"])

	deletedDeviceType: DeviceType
		@aws_subscribe(mutations: ["deleteDeviceType"])

	## Systems
	addedSystem: [System] @aws_subscribe(mutations: ["addSystem"])

	updatedSystem: [System] @aws_subscribe(mutations: ["updateSystem"])

	deletedSystem: [System] @aws_subscribe(mutations: ["deleteSystem"])

	## System Blueprints
	addedSystemBlueprint: [SystemBlueprint]
		@aws_subscribe(mutations: ["addSystemBlueprint"])

	updatedSystemBlueprint: [SystemBlueprint]
		@aws_subscribe(mutations: ["updateSystemBlueprint"])

	deletedSystemBlueprint: [SystemBlueprint]
		@aws_subscribe(mutations: ["deleteSystemBlueprint"])
}
